# Generated by Django 3.2.9 on 2022-07-27 13:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import utils.uploading


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=150, verbose_name='Область/Край')),
                ('district', models.CharField(blank=True, max_length=150, verbose_name='Район')),
                ('city', models.CharField(max_length=150, verbose_name='Населенный пункт')),
                ('neighborhood', models.CharField(blank=True, max_length=150, verbose_name='Микрорайон')),
                ('street', models.CharField(max_length=200, verbose_name='Улица')),
                ('building', models.CharField(max_length=4, verbose_name='Дом/Строение')),
                ('apartment', models.CharField(blank=True, max_length=3, verbose_name='Квартира')),
            ],
            options={
                'verbose_name': 'Адрес',
                'verbose_name_plural': 'Адреса',
            },
        ),
        migrations.CreateModel(
            name='ApplicationForDismissal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal_number', models.CharField(blank=True, max_length=10, verbose_name='Внутренний номер')),
                ('date', models.DateField(verbose_name='Дата')),
                ('application_scan', models.FileField(upload_to=utils.uploading.file_upload_function)),
            ],
            options={
                'verbose_name': 'Заявление на увольнение',
                'verbose_name_plural': 'Заявления на увольнение',
            },
        ),
        migrations.CreateModel(
            name='ApplicationForEmployment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal_number', models.CharField(blank=True, max_length=10, verbose_name='Внутренний номер')),
                ('date', models.DateField(verbose_name='Дата')),
                ('application_scan', models.FileField(upload_to=utils.uploading.file_upload_function)),
            ],
            options={
                'verbose_name': 'Заявление на прием на работу',
                'verbose_name_plural': 'Заявления на прием на работу',
            },
        ),
        migrations.CreateModel(
            name='ApplicationForPositionTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal_number', models.CharField(blank=True, max_length=10, verbose_name='Внутренний номер')),
                ('date', models.DateField(verbose_name='Дата')),
                ('application_scan', models.FileField(upload_to=utils.uploading.file_upload_function, verbose_name='Скан заявления')),
            ],
            options={
                'verbose_name': 'Заявление на перевод',
                'verbose_name_plural': 'Заявления на перевод',
            },
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=250, verbose_name='Наименование банка')),
                ('bic_number', models.CharField(max_length=9, verbose_name='БИК Банка')),
                ('correspondent_account', models.CharField(max_length=20, verbose_name='Кор. счет')),
            ],
            options={
                'verbose_name': 'Банк',
                'verbose_name_plural': 'Банки',
            },
        ),
        migrations.CreateModel(
            name='BranchOffice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=250, verbose_name='Полное наименование')),
                ('short_name', models.CharField(max_length=250, verbose_name='Краткое наименование')),
                ('email', models.EmailField(max_length=254, verbose_name='Почта')),
                ('phone', models.CharField(max_length=18, verbose_name='Номер телефона')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.address', verbose_name='Адрес')),
            ],
            options={
                'verbose_name': 'Филиал',
                'verbose_name_plural': 'Филиалы/Подразделения',
            },
        ),
        migrations.CreateModel(
            name='Contragent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250, verbose_name='Полное наименование')),
                ('short_name', models.CharField(max_length=150, verbose_name='Рабочее наименование')),
                ('logo', models.ImageField(blank=True, upload_to=utils.uploading.image_upload_function, verbose_name='Логотип')),
                ('inn', models.CharField(max_length=10, verbose_name='ИНН')),
                ('kpp', models.CharField(max_length=9, verbose_name='КПП')),
                ('okpo', models.CharField(blank=True, max_length=8, verbose_name='ОКПО')),
            ],
            options={
                'verbose_name': 'Контрагент',
                'verbose_name_plural': 'Контрагенты',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(max_length=150, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=150, verbose_name='Имя')),
                ('middle_name', models.CharField(blank=True, max_length=150, verbose_name='Отчество')),
                ('birthday', models.DateField(null=True, verbose_name='Дата рождения')),
            ],
            options={
                'verbose_name': 'Сотрудник',
                'verbose_name_plural': 'Сотрудники',
            },
        ),
        migrations.CreateModel(
            name='EmployeeAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=150, verbose_name='Область/Край')),
                ('district', models.CharField(blank=True, max_length=150, verbose_name='Район')),
                ('city', models.CharField(max_length=150, verbose_name='Населенный пункт')),
                ('neighborhood', models.CharField(blank=True, max_length=150, verbose_name='Микрорайон')),
                ('street', models.CharField(max_length=200, verbose_name='Улица')),
                ('building', models.CharField(max_length=4, verbose_name='Дом/Строение')),
                ('apartment', models.CharField(blank=True, max_length=3, verbose_name='Квартира')),
            ],
            options={
                'verbose_name': 'Адрес',
                'verbose_name_plural': 'Адреса',
            },
        ),
        migrations.CreateModel(
            name='EmployeeCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('r_first_name', models.CharField(max_length=150, verbose_name='Имя "Кого?"')),
                ('r_last_name', models.CharField(max_length=150, verbose_name='Фамилия "Кого?"')),
                ('r_middle_name', models.CharField(max_length=150, verbose_name='Отчество "Кого?"')),
                ('d_first_name', models.CharField(max_length=150, verbose_name='Имя "Кому?"')),
                ('d_last_name', models.CharField(max_length=150, verbose_name='Фамилия "Кому?"')),
                ('d_middle_name', models.CharField(max_length=150, verbose_name='Отчество "Кому?"')),
                ('image', models.ImageField(blank=True, upload_to=utils.uploading.image_upload_function, verbose_name='Фото')),
                ('passport_serial', models.CharField(max_length=4, verbose_name='Серия паспорта')),
                ('passport_number', models.CharField(max_length=6, verbose_name='Номер паспорта')),
                ('passport_issuing', models.CharField(max_length=250, verbose_name='Кем выдан')),
                ('passport_date_of_issue', models.DateField(verbose_name='Дата выдачи')),
                ('issuing_office_number', models.CharField(max_length=7, verbose_name='Код подразделения')),
                ('sex', models.CharField(blank=True, choices=[('Мужской', 'Мужской'), ('Женский', 'Женский')], max_length=10, null=True, verbose_name='Пол')),
                ('marital_status', models.CharField(blank=True, choices=[('Не женат/Не замужем', 'Не женат/Не замужем'), ('Женат/Замужем', 'Женат/Замужем'), ('Вдовец/вдова', 'Вдовец/вдова'), ('Разведен/Разведена', 'Разведен/Разведена')], max_length=25, null=True, verbose_name='Семейное положение')),
                ('children', models.IntegerField(blank=True, null=True, verbose_name='Несовершеннолетние дети')),
                ('main_address', models.CharField(blank=True, max_length=150, verbose_name='Адрес регистрации')),
                ('inn', models.CharField(blank=True, max_length=10, verbose_name='ИНН')),
                ('snils', models.CharField(blank=True, max_length=11, verbose_name='СНИЛС')),
                ('passport_copy', models.FileField(blank=True, upload_to=utils.uploading.file_upload_function, verbose_name='Копия паспорта')),
                ('phone', models.CharField(blank=True, max_length=18, verbose_name='Телефон')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Почта')),
                ('adopted_date', models.DateField(blank=True, verbose_name='Принят')),
                ('dismissed_date', models.DateField(blank=True, verbose_name='Дата увольнения')),
                ('bib_experience_before', models.FloatField(blank=True, default=0, verbose_name='Предыдущий стаж библиотечный')),
                ('experience_before', models.FloatField(blank=True, default=0, verbose_name='Предыдущий стаж полный')),
                ('digital_work_book', models.BooleanField(blank=True, default=False, verbose_name='"Электронная')),
                ('paper_work_book', models.BooleanField(blank=True, default=False, verbose_name='Бумажная')),
                ('paper_work_book_image', models.FileField(blank=True, upload_to=utils.uploading.file_upload_function, verbose_name='Скан бумажной трудовой')),
                ('covid_certificate', models.FileField(blank=True, upload_to='', verbose_name='Сертификат вакцинированного')),
                ('appliccaton_for_dissmiss', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.applicationfordismissal', verbose_name='Заявление на увольнение')),
                ('appliccaton_for_employment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.applicationforemployment', verbose_name='Заявление о приеме на работу')),
                ('appliccaton_for_transfer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.applicationforpositiontransfer', verbose_name='Заявление о приеме на работу')),
                ('branch_office', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.branchoffice', verbose_name='Филиал')),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee_card', to='mainapp.employee', verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'Карточка сотрудника',
                'verbose_name_plural': 'Карточки сотрудников',
            },
        ),
        migrations.CreateModel(
            name='IncomingDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('Приказ', 'Приказ'), ('Письмо', 'Письмо'), ('Требование', 'Требование')], default='Приказ', max_length=20)),
                ('number', models.CharField(blank=True, max_length=50, verbose_name='Номер')),
                ('date', models.DateField(verbose_name='Дата')),
                ('title', models.CharField(max_length=150, verbose_name='Заголовок')),
                ('scan_image', models.FileField(upload_to=utils.uploading.file_upload_function, verbose_name='Скан документа')),
                ('contragent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.contragent', verbose_name='Организация')),
            ],
            options={
                'verbose_name': 'Входящий документ',
                'verbose_name_plural': 'Входящие документы',
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Название')),
                ('color', models.CharField(max_length=20, verbose_name='Цвет')),
            ],
            options={
                'verbose_name': 'Цвет',
                'verbose_name_plural': 'Цвета',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=250, verbose_name='Полное наименование')),
                ('short_name', models.CharField(max_length=250, verbose_name='Краткое наименование')),
                ('logo', models.ImageField(blank=True, upload_to=utils.uploading.image_upload_function, verbose_name='Логотип')),
                ('inn', models.CharField(max_length=10, verbose_name='ИНН')),
                ('kpp', models.CharField(max_length=9, verbose_name='КПП')),
                ('okpo', models.CharField(max_length=8, verbose_name='ОКПО')),
                ('ogrn', models.CharField(max_length=13, verbose_name='ОГРН')),
                ('registration_date', models.DateField(verbose_name='Дата регистрации')),
                ('primary', models.BooleanField(default=False, verbose_name='Основная')),
            ],
            options={
                'verbose_name': 'Организация',
                'verbose_name_plural': 'Организации',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Наименование')),
                ('submission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='childs', to='mainapp.position', verbose_name='Подчиняется')),
            ],
            options={
                'verbose_name': 'Должность',
                'verbose_name_plural': 'Должности',
            },
        ),
        migrations.CreateModel(
            name='Reason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Название')),
                ('article_of_law', models.CharField(blank=True, max_length=250, verbose_name='Статья ТК')),
            ],
            options={
                'verbose_name': 'Причина увольнения',
                'verbose_name_plural': 'Причины увольнения',
            },
        ),
        migrations.CreateModel(
            name='WorkContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=10, verbose_name='Номер')),
                ('date', models.DateField(verbose_name='Дата')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.employee', verbose_name='Сотрудник')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.organization', verbose_name='Организация')),
                ('position', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.position', verbose_name='Должность')),
            ],
            options={
                'verbose_name': 'Трудовой договор',
                'verbose_name_plural': 'Трудовые договоры',
            },
        ),
        migrations.CreateModel(
            name='PositionInstruction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата')),
                ('file', models.FileField(upload_to=utils.uploading.file_upload_function, verbose_name='Файл инструкций')),
                ('position', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.position', verbose_name='Должность')),
            ],
            options={
                'verbose_name': 'Должностная инструкция',
                'verbose_name_plural': 'Должностные инструкции',
            },
        ),
        migrations.CreateModel(
            name='PersonalDataAgreement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=10, verbose_name='Номер')),
                ('date', models.DateField(verbose_name='Дата')),
                ('agreement_file', models.FileField(upload_to=utils.uploading.file_upload_function, verbose_name='Скан документа')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.employeecard', verbose_name='Соглашение о персоналных данных')),
            ],
            options={
                'verbose_name': 'Соглашение об обработке персоналных данных',
                'verbose_name_plural': 'Соглашения об обработке персональных данных',
            },
        ),
        migrations.CreateModel(
            name='OrganizationBankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Рабочее название')),
                ('payment_account', models.CharField(max_length=20, verbose_name='Расчетный счет')),
                ('account_currency', models.CharField(blank=True, choices=[('Рубль', 'Рубль'), ('Евро', 'Евро'), ('Доллар', 'Доллар')], default='Рубль', max_length=10, null=True, verbose_name='Валюта счета')),
                ('bank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.bank', verbose_name='Банк')),
            ],
            options={
                'verbose_name': 'Банковский Счет',
                'verbose_name_plural': 'Банковские счета организации',
            },
        ),
        migrations.AddField(
            model_name='organization',
            name='bank_details',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.organizationbankaccount', verbose_name='Баковские реквизиты'),
        ),
        migrations.AddField(
            model_name='organization',
            name='fact_address',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='fact_address', to='mainapp.address', verbose_name='Почтовый адрес'),
        ),
        migrations.AddField(
            model_name='organization',
            name='legal_address',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='legal_address', to='mainapp.address', verbose_name='Юридический адрес'),
        ),
        migrations.CreateModel(
            name='OrderForEmployment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=10, verbose_name='Номер')),
                ('date', models.DateField(verbose_name='Дата')),
                ('scan_file', models.FileField(upload_to=utils.uploading.file_upload_function, verbose_name='Скан приказа')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.employee', verbose_name='Сотрудник')),
                ('position', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.position', verbose_name='Должность')),
            ],
            options={
                'verbose_name': 'Приказ о приеме на работу',
                'verbose_name_plural': 'Приказы о приеме на работу',
            },
        ),
        migrations.CreateModel(
            name='InternalOrderOrganization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=50, verbose_name='Номер')),
                ('date', models.DateField(verbose_name='Дата')),
                ('title', models.CharField(max_length=150, verbose_name='Заголовок')),
                ('text', models.TextField(blank=True, verbose_name='Текст')),
                ('scan_image', models.FileField(upload_to=utils.uploading.file_upload_function, verbose_name='Скан документа')),
                ('base_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.incomingdocument', verbose_name='Основание')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.organization', verbose_name='Организация')),
            ],
            options={
                'verbose_name': 'Приказ по организации',
                'verbose_name_plural': 'Приказы по организации',
            },
        ),
        migrations.CreateModel(
            name='EmployeeStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Нименование')),
                ('color', models.ForeignKey(blank=True, max_length=50, on_delete=django.db.models.deletion.CASCADE, to='mainapp.label', verbose_name='Цвет')),
            ],
            options={
                'verbose_name': 'Статус сотрудника',
                'verbose_name_plural': 'Статусы сотрудников',
            },
        ),
        migrations.AddField(
            model_name='employeecard',
            name='order_for_employment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.orderforemployment', verbose_name='Приказ о приеме на работу'),
        ),
        migrations.AddField(
            model_name='employeecard',
            name='position_instruction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.positioninstruction', verbose_name='Должностные инструкции'),
        ),
        migrations.AddField(
            model_name='employeecard',
            name='work_contract',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.workcontract', verbose_name='Трудовой договор'),
        ),
        migrations.AddField(
            model_name='employee',
            name='position',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.position', verbose_name='Должность'),
        ),
        migrations.AddField(
            model_name='employee',
            name='status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.employeestatus', verbose_name='Рабочий статус'),
        ),
        migrations.AddField(
            model_name='employee',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Наименование')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Почта')),
                ('phone', models.CharField(blank=True, max_length=18, verbose_name='Номер телефона')),
                ('employees', models.ManyToManyField(blank=True, related_name='employees', to='mainapp.Employee', verbose_name='Сотрудники')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='manager', to='mainapp.employee', verbose_name='Руководитель')),
                ('parent_branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.branchoffice', verbose_name='Входит в состав')),
            ],
            options={
                'verbose_name': 'Отдел',
                'verbose_name_plural': 'Отделы',
            },
        ),
        migrations.CreateModel(
            name='CovidCertificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=10, verbose_name='Номер')),
                ('date', models.DateField(verbose_name='Дата')),
                ('certificate_file', models.FileField(upload_to=utils.uploading.file_upload_function, verbose_name='Скан документа')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.employeecard', verbose_name='Сертифика о вакцинации')),
            ],
            options={
                'verbose_name': 'Сертификат о вакцинации',
                'verbose_name_plural': 'Сертификаты вакцинированных',
            },
        ),
        migrations.CreateModel(
            name='ContragentBankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Рабочее название')),
                ('payment_account', models.CharField(max_length=20, verbose_name='Расчетный счет')),
                ('account_currency', models.CharField(blank=True, choices=[('Рубль', 'Рубль'), ('Евро', 'Евро'), ('Доллар', 'Доллар')], default='Рубль', max_length=10, null=True, verbose_name='Валюта счета')),
                ('bank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.bank', verbose_name='Банк')),
            ],
            options={
                'verbose_name': 'Банковский счет контрагента',
                'verbose_name_plural': 'Банковские счета контрагентов',
            },
        ),
        migrations.AddField(
            model_name='contragent',
            name='bank_details',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mainapp.contragentbankaccount', verbose_name='Баковские реквизиты'),
        ),
        migrations.AddField(
            model_name='contragent',
            name='fact_address',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='contragent_fact_address', to='mainapp.address', verbose_name='Почтовый адрес'),
        ),
        migrations.AddField(
            model_name='contragent',
            name='legal_address',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contragent_legal_address', to='mainapp.address', verbose_name='Юридический адрес'),
        ),
        migrations.AddField(
            model_name='contragent',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.organization', verbose_name='Организация'),
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Название в списке')),
                ('last_name', models.CharField(blank=True, max_length=100, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=100, verbose_name='Имя')),
                ('middle_name', models.CharField(max_length=100, verbose_name='Отчество')),
                ('image', models.ImageField(blank=True, upload_to=utils.uploading.image_upload_function, verbose_name='Фото')),
                ('phone', models.CharField(max_length=18, verbose_name='Номер телефона')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('whatsapp', models.BooleanField(default=True, verbose_name='Есть whatsapp')),
                ('viber', models.BooleanField(default=False, verbose_name='Есть viber')),
                ('telegram', models.BooleanField(default=False, verbose_name='Есть telegram')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.contragent', verbose_name='Контрагент')),
            ],
            options={
                'verbose_name': 'Контакт',
                'verbose_name_plural': 'Контакты',
            },
        ),
        migrations.AddField(
            model_name='branchoffice',
            name='departments',
            field=models.ManyToManyField(blank=True, to='mainapp.Department', verbose_name='Отделы'),
        ),
        migrations.AddField(
            model_name='branchoffice',
            name='manager',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.employee', verbose_name='Руководитель подразделения'),
        ),
        migrations.AddField(
            model_name='branchoffice',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.organization', verbose_name='Организация'),
        ),
        migrations.AddField(
            model_name='branchoffice',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='childs', to='mainapp.branchoffice', verbose_name='Подчиняется'),
        ),
        migrations.CreateModel(
            name='ApplicationForTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal_number', models.CharField(blank=True, max_length=10, verbose_name='Внутренний номер')),
                ('date', models.DateField(verbose_name='Дата')),
                ('application_scan', models.FileField(upload_to=utils.uploading.file_upload_function)),
                ('position', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.position', verbose_name='На должность')),
            ],
            options={
                'verbose_name': 'Заявление на перевод',
                'verbose_name_plural': 'Заявления на перевод',
            },
        ),
        migrations.AddField(
            model_name='applicationforpositiontransfer',
            name='position',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.position', verbose_name='Должность'),
        ),
        migrations.AddField(
            model_name='applicationforpositiontransfer',
            name='reason',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.reason', verbose_name='Причина'),
        ),
        migrations.AddField(
            model_name='applicationforemployment',
            name='position',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.position', verbose_name='Должность'),
        ),
        migrations.AddField(
            model_name='applicationfordismissal',
            name='position',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.position', verbose_name='Должность'),
        ),
        migrations.AddField(
            model_name='applicationfordismissal',
            name='reason',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.reason', verbose_name='Причина'),
        ),
    ]
